---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: oidcidentitymappings.platform.jfrog.crossplane.io
spec:
  group: platform.jfrog.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - jfrog-platform
    kind: OIDCIdentityMapping
    listKind: OIDCIdentityMappingList
    plural: oidcidentitymappings
    singular: oidcidentitymapping
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OIDCIdentityMapping is the Schema for the OIDCIdentityMappings
          API. Manage OIDC identity mapping for an OIDC configuration in JFrog platform.
          See the JFrog OIDC identity mappings documentation https://jfrog.com/help/r/jfrog-platform-administration-documentation/configure-identity-mappings
          for more information.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OIDCIdentityMappingSpec defines the desired state of OIDCIdentityMapping
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  claimsJson:
                    description: |-
                      (String) Claims JSON from the OIDC provider. Claims constitute the payload part of a JSON web token and represent a set of information exchanged between two parties. The JWT standard distinguishes between reserved claims, public claims, and private claims. In API Gateway context, both public claims and private claims are considered custom claims. For example, an ID token (which is always a JWT) can contain a claim called that asserts that the name of the user authenticating is "John Doe". In a JWT, a claim appears as a name/value pair where the name is always a string and the value can be any JSON value.
                      Claims JSON from the OIDC provider.hashicorp. Claims constitute the payload part of a JSON web token and represent a set of information exchanged between two parties. The JWT standard distinguishes between reserved claims, public claims, and private claims. In API Gateway context, both public claims and private claims are considered custom claims. For example, an ID token (which is always a JWT) can contain a claim called that asserts that the name of the user authenticating is "John Doe". In a JWT, a claim appears as a name/value pair where the name is always a string and the value can be any JSON value.
                    type: string
                  description:
                    description: |-
                      (String) Description of the OIDC mapping
                      Description of the OIDC mapping
                    type: string
                  name:
                    description: |-
                      (String) Name of the OIDC identity mapping
                      Name of the OIDC identity mapping
                    type: string
                  priority:
                    description: |-
                      (Number) Priority of the identity mapping. The priority should be a number. The higher priority is set for the lower number. If you do not enter a value, the identity mapping is assigned the lowest priority. We recommend that you assign the highest priority (1) to the strongest permission gate. Set the lowest priority to the weakest permission for a logical and effective access control setup.
                      Priority of the identity mapping. The priority should be a number. The higher priority is set for the lower number. If you do not enter a value, the identity mapping is assigned the lowest priority. We recommend that you assign the highest priority (1) to the strongest permission gate. Set the lowest priority to the weakest permission for a logical and effective access control setup.
                    type: number
                  projectKey:
                    description: |-
                      (String) If set, this Identity Mapping will be available in the scope of the given project (editable by platform admin and project admin). If not set, this Identity Mapping will be global and only editable by platform admin. Once set, the projectKey cannot be changed.
                      If set, this Identity Mapping will be available in the scope of the given project (editable by platform admin and project admin). If not set, this Identity Mapping will be global and only editable by platform admin. Once set, the projectKey cannot be changed.
                    type: string
                  providerName:
                    description: |-
                      (String) Name of the OIDC configuration
                      Name of the OIDC configuration
                    type: string
                  tokenSpec:
                    description: (Attributes) Specifications of the token. In case
                      of success, a token with the following details will be generated
                      and passed to OIDC Provider. (see below for nested schema)
                    properties:
                      audience:
                        description: |-
                          (String) Sets of (space separated) the JFrog services to which the mapping applies. Default value is *@*, which applies to all services.
                          Sets of (space separated) the JFrog services to which the mapping applies. Default value is `*@*`, which applies to all services.
                        type: string
                      expiresIn:
                        description: |-
                          (Number) Token expiry time in seconds. Default value is 60.
                          Token expiry time in seconds. Default value is 60.
                        type: number
                      groupsPattern:
                        description: |-
                          (String) Provide a pattern which is used to map OIDC groups to Artifactory groups.
                          Provide a pattern which is used to map OIDC groups to Artifactory groups.
                        type: string
                      scope:
                        description: |-
                          permissions/user, applied-permissions/admin, applied-permissions/roles:, or applied-permissions/groups:. Group names must be comma-separated, double quotes wrapped, e.g. applied-permissions/groups:\"readers\",\"my-group\", Role permissions are only applicable when in project scope and must be comma-separated, double quotes wrapped, e.g. applied-permissions:roles:<project-key>:"Developer","Viewer". username` is also required when setting role permission.
                          Scope of the token. Must start with `applied-permissions/user`, `applied-permissions/admin`, `applied-permissions/roles:`, or `applied-permissions/groups:`. Group names must be comma-separated, double quotes wrapped, e.g. `applied-permissions/groups:\"readers\",\"my-group\",` Role permissions are only applicable when in project scope and must be comma-separated, double quotes wrapped, e.g. `applied-permissions:roles:<project-key>:"Developer","Viewer". `username` is also required when setting role permission.
                        type: string
                      username:
                        description: |-
                          permissions/groups. Must be set when scope is set to applied-permissions/roles.
                          User name of the OIDC user. Not applicable when `scope` is set to `applied-permissions/groups`. Must be set when `scope` is set to `applied-permissions/roles`.
                        type: string
                      usernamePattern:
                        description: |-
                          (String) Provide a pattern which is used to map OIDC user to Artifactory user.
                          Provide a pattern which is used to map OIDC user to Artifactory user.
                        type: string
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  claimsJson:
                    description: |-
                      (String) Claims JSON from the OIDC provider. Claims constitute the payload part of a JSON web token and represent a set of information exchanged between two parties. The JWT standard distinguishes between reserved claims, public claims, and private claims. In API Gateway context, both public claims and private claims are considered custom claims. For example, an ID token (which is always a JWT) can contain a claim called that asserts that the name of the user authenticating is "John Doe". In a JWT, a claim appears as a name/value pair where the name is always a string and the value can be any JSON value.
                      Claims JSON from the OIDC provider.hashicorp. Claims constitute the payload part of a JSON web token and represent a set of information exchanged between two parties. The JWT standard distinguishes between reserved claims, public claims, and private claims. In API Gateway context, both public claims and private claims are considered custom claims. For example, an ID token (which is always a JWT) can contain a claim called that asserts that the name of the user authenticating is "John Doe". In a JWT, a claim appears as a name/value pair where the name is always a string and the value can be any JSON value.
                    type: string
                  description:
                    description: |-
                      (String) Description of the OIDC mapping
                      Description of the OIDC mapping
                    type: string
                  name:
                    description: |-
                      (String) Name of the OIDC identity mapping
                      Name of the OIDC identity mapping
                    type: string
                  priority:
                    description: |-
                      (Number) Priority of the identity mapping. The priority should be a number. The higher priority is set for the lower number. If you do not enter a value, the identity mapping is assigned the lowest priority. We recommend that you assign the highest priority (1) to the strongest permission gate. Set the lowest priority to the weakest permission for a logical and effective access control setup.
                      Priority of the identity mapping. The priority should be a number. The higher priority is set for the lower number. If you do not enter a value, the identity mapping is assigned the lowest priority. We recommend that you assign the highest priority (1) to the strongest permission gate. Set the lowest priority to the weakest permission for a logical and effective access control setup.
                    type: number
                  projectKey:
                    description: |-
                      (String) If set, this Identity Mapping will be available in the scope of the given project (editable by platform admin and project admin). If not set, this Identity Mapping will be global and only editable by platform admin. Once set, the projectKey cannot be changed.
                      If set, this Identity Mapping will be available in the scope of the given project (editable by platform admin and project admin). If not set, this Identity Mapping will be global and only editable by platform admin. Once set, the projectKey cannot be changed.
                    type: string
                  providerName:
                    description: |-
                      (String) Name of the OIDC configuration
                      Name of the OIDC configuration
                    type: string
                  tokenSpec:
                    description: (Attributes) Specifications of the token. In case
                      of success, a token with the following details will be generated
                      and passed to OIDC Provider. (see below for nested schema)
                    properties:
                      audience:
                        description: |-
                          (String) Sets of (space separated) the JFrog services to which the mapping applies. Default value is *@*, which applies to all services.
                          Sets of (space separated) the JFrog services to which the mapping applies. Default value is `*@*`, which applies to all services.
                        type: string
                      expiresIn:
                        description: |-
                          (Number) Token expiry time in seconds. Default value is 60.
                          Token expiry time in seconds. Default value is 60.
                        type: number
                      groupsPattern:
                        description: |-
                          (String) Provide a pattern which is used to map OIDC groups to Artifactory groups.
                          Provide a pattern which is used to map OIDC groups to Artifactory groups.
                        type: string
                      scope:
                        description: |-
                          permissions/user, applied-permissions/admin, applied-permissions/roles:, or applied-permissions/groups:. Group names must be comma-separated, double quotes wrapped, e.g. applied-permissions/groups:\"readers\",\"my-group\", Role permissions are only applicable when in project scope and must be comma-separated, double quotes wrapped, e.g. applied-permissions:roles:<project-key>:"Developer","Viewer". username` is also required when setting role permission.
                          Scope of the token. Must start with `applied-permissions/user`, `applied-permissions/admin`, `applied-permissions/roles:`, or `applied-permissions/groups:`. Group names must be comma-separated, double quotes wrapped, e.g. `applied-permissions/groups:\"readers\",\"my-group\",` Role permissions are only applicable when in project scope and must be comma-separated, double quotes wrapped, e.g. `applied-permissions:roles:<project-key>:"Developer","Viewer". `username` is also required when setting role permission.
                        type: string
                      username:
                        description: |-
                          permissions/groups. Must be set when scope is set to applied-permissions/roles.
                          User name of the OIDC user. Not applicable when `scope` is set to `applied-permissions/groups`. Must be set when `scope` is set to `applied-permissions/roles`.
                        type: string
                      usernamePattern:
                        description: |-
                          (String) Provide a pattern which is used to map OIDC user to Artifactory user.
                          Provide a pattern which is used to map OIDC user to Artifactory user.
                        type: string
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.claimsJson is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.claimsJson)
                || (has(self.initProvider) && has(self.initProvider.claimsJson))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.priority is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.priority)
                || (has(self.initProvider) && has(self.initProvider.priority))'
            - message: spec.forProvider.providerName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.providerName)
                || (has(self.initProvider) && has(self.initProvider.providerName))'
            - message: spec.forProvider.tokenSpec is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.tokenSpec)
                || (has(self.initProvider) && has(self.initProvider.tokenSpec))'
          status:
            description: OIDCIdentityMappingStatus defines the observed state of OIDCIdentityMapping.
            properties:
              atProvider:
                properties:
                  claimsJson:
                    description: |-
                      (String) Claims JSON from the OIDC provider. Claims constitute the payload part of a JSON web token and represent a set of information exchanged between two parties. The JWT standard distinguishes between reserved claims, public claims, and private claims. In API Gateway context, both public claims and private claims are considered custom claims. For example, an ID token (which is always a JWT) can contain a claim called that asserts that the name of the user authenticating is "John Doe". In a JWT, a claim appears as a name/value pair where the name is always a string and the value can be any JSON value.
                      Claims JSON from the OIDC provider.hashicorp. Claims constitute the payload part of a JSON web token and represent a set of information exchanged between two parties. The JWT standard distinguishes between reserved claims, public claims, and private claims. In API Gateway context, both public claims and private claims are considered custom claims. For example, an ID token (which is always a JWT) can contain a claim called that asserts that the name of the user authenticating is "John Doe". In a JWT, a claim appears as a name/value pair where the name is always a string and the value can be any JSON value.
                    type: string
                  description:
                    description: |-
                      (String) Description of the OIDC mapping
                      Description of the OIDC mapping
                    type: string
                  id:
                    type: string
                  name:
                    description: |-
                      (String) Name of the OIDC identity mapping
                      Name of the OIDC identity mapping
                    type: string
                  priority:
                    description: |-
                      (Number) Priority of the identity mapping. The priority should be a number. The higher priority is set for the lower number. If you do not enter a value, the identity mapping is assigned the lowest priority. We recommend that you assign the highest priority (1) to the strongest permission gate. Set the lowest priority to the weakest permission for a logical and effective access control setup.
                      Priority of the identity mapping. The priority should be a number. The higher priority is set for the lower number. If you do not enter a value, the identity mapping is assigned the lowest priority. We recommend that you assign the highest priority (1) to the strongest permission gate. Set the lowest priority to the weakest permission for a logical and effective access control setup.
                    type: number
                  projectKey:
                    description: |-
                      (String) If set, this Identity Mapping will be available in the scope of the given project (editable by platform admin and project admin). If not set, this Identity Mapping will be global and only editable by platform admin. Once set, the projectKey cannot be changed.
                      If set, this Identity Mapping will be available in the scope of the given project (editable by platform admin and project admin). If not set, this Identity Mapping will be global and only editable by platform admin. Once set, the projectKey cannot be changed.
                    type: string
                  providerName:
                    description: |-
                      (String) Name of the OIDC configuration
                      Name of the OIDC configuration
                    type: string
                  tokenSpec:
                    description: (Attributes) Specifications of the token. In case
                      of success, a token with the following details will be generated
                      and passed to OIDC Provider. (see below for nested schema)
                    properties:
                      audience:
                        description: |-
                          (String) Sets of (space separated) the JFrog services to which the mapping applies. Default value is *@*, which applies to all services.
                          Sets of (space separated) the JFrog services to which the mapping applies. Default value is `*@*`, which applies to all services.
                        type: string
                      expiresIn:
                        description: |-
                          (Number) Token expiry time in seconds. Default value is 60.
                          Token expiry time in seconds. Default value is 60.
                        type: number
                      groupsPattern:
                        description: |-
                          (String) Provide a pattern which is used to map OIDC groups to Artifactory groups.
                          Provide a pattern which is used to map OIDC groups to Artifactory groups.
                        type: string
                      scope:
                        description: |-
                          permissions/user, applied-permissions/admin, applied-permissions/roles:, or applied-permissions/groups:. Group names must be comma-separated, double quotes wrapped, e.g. applied-permissions/groups:\"readers\",\"my-group\", Role permissions are only applicable when in project scope and must be comma-separated, double quotes wrapped, e.g. applied-permissions:roles:<project-key>:"Developer","Viewer". username` is also required when setting role permission.
                          Scope of the token. Must start with `applied-permissions/user`, `applied-permissions/admin`, `applied-permissions/roles:`, or `applied-permissions/groups:`. Group names must be comma-separated, double quotes wrapped, e.g. `applied-permissions/groups:\"readers\",\"my-group\",` Role permissions are only applicable when in project scope and must be comma-separated, double quotes wrapped, e.g. `applied-permissions:roles:<project-key>:"Developer","Viewer". `username` is also required when setting role permission.
                        type: string
                      username:
                        description: |-
                          permissions/groups. Must be set when scope is set to applied-permissions/roles.
                          User name of the OIDC user. Not applicable when `scope` is set to `applied-permissions/groups`. Must be set when `scope` is set to `applied-permissions/roles`.
                        type: string
                      usernamePattern:
                        description: |-
                          (String) Provide a pattern which is used to map OIDC user to Artifactory user.
                          Provide a pattern which is used to map OIDC user to Artifactory user.
                        type: string
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SAMLSettingsInitParameters struct {

	// (Boolean) When set, auto created users will have access to their profile page and will be able to perform actions such as generating an API key. Default value is false.
	// When set, auto created users will have access to their profile page and will be able to perform actions such as generating an API key. Default value is `false`.
	AllowUserToAccessProfile *bool `json:"allowUserToAccessProfile,omitempty" tf:"allow_user_to_access_profile,omitempty"`

	// (Boolean) When set, clicking on the login link will direct users to the configured SAML login URL. Default value is false.
	// When set, clicking on the login link will direct users to the configured SAML login URL. Default value is `false`.
	AutoRedirect *bool `json:"autoRedirect,omitempty" tf:"auto_redirect,omitempty"`

	// (Boolean) When set, authenticated users are automatically created in Artifactory. When not set, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined), and the permissions for these groups apply. Without automatic user creation, you must manually create the user inside Artifactory to manage user permissions not attached to their default groups. Default value is true.
	// When set, authenticated users are automatically created in Artifactory. When not set, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined), and the permissions for these groups apply. Without automatic user creation, you must manually create the user inside Artifactory to manage user permissions not attached to their default groups. Default value is `true`.
	AutoUserCreation *bool `json:"autoUserCreation,omitempty" tf:"auto_user_creation,omitempty"`

	// in requests.
	// The certificate for SAML Authentication in Base64 format. NOTE! The certificate must contain the public key to allow Artifactory to verify sign-in requests.
	CertificateSecretRef v1.SecretKeySelector `json:"certificateSecretRef" tf:"-"`

	// (String) If auto_user_creation is enabled or an internal user exists, the system will set the user's email to the value in this attribute that is returned by the SAML login XML response.
	// If `auto_user_creation` is enabled or an internal user exists, the system will set the user's email to the value in this attribute that is returned by the SAML login XML response.
	EmailAttribute *string `json:"emailAttribute,omitempty" tf:"email_attribute,omitempty"`

	// (Boolean) When set, SAML integration is enabled and users may be authenticated via a SAML server. Default value is true.
	// When set, SAML integration is enabled and users may be authenticated via a SAML server. Default value is `true`.
	Enable *bool `json:"enable,omitempty" tf:"enable,omitempty"`

	// sensitive match to an existing group..
	// The group attribute in the SAML login XML response. Note that the system will search for a case-sensitive match to an existing group..
	GroupAttribute *string `json:"groupAttribute,omitempty" tf:"group_attribute,omitempty"`

	// (Set of String) List of LDAP group setting names. Only support in Artifactory 7.98 or later. See Enabling Synchronization of LDAP Groups for SAML SSO for more details.
	// List of LDAP group setting names. Only support in Artifactory 7.98 or later. See [Enabling Synchronization of LDAP Groups for SAML SSO](https://jfrog.com/help/r/jfrog-platform-administration-documentation/enabling-synchronization-of-ldap-groups-for-saml-sso) for more details.
	// +listType=set
	LdapGroupSettings []*string `json:"ldapGroupSettings,omitempty" tf:"ldap_group_settings,omitempty"`

	// (String) The identity provider login URL (when you try to login, the service provider redirects to this URL).
	// The identity provider login URL (when you try to login, the service provider redirects to this URL).
	LoginURL *string `json:"loginUrl,omitempty" tf:"login_url,omitempty"`

	// (String) The identity provider logout URL (when you try to logout, the service provider redirects to this URL).
	// The identity provider logout URL (when you try to logout, the service provider redirects to this URL).
	LogoutURL *string `json:"logoutUrl,omitempty" tf:"logout_url,omitempty"`

	// (String) SAML Settings name.
	// SAML Settings name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The username attribute used to configure the SSO URL for the identity provider.
	// The username attribute used to configure the SSO URL for the identity provider.
	NameIDAttribute *string `json:"nameIdAttribute,omitempty" tf:"name_id_attribute,omitempty"`

	// (String) The SAML service provider name. This should be a URI that is also known as the entityID, providerID, or entity identity.
	// The SAML service provider name. This should be a URI that is also known as the entityID, providerID, or entity identity.
	ServiceProviderName *string `json:"serviceProviderName,omitempty" tf:"service_provider_name,omitempty"`

	// (Boolean) When set, in addition to the groups the user is already associated with, he will also be associated with the groups returned in the SAML login response. Note that the user's association with the returned groups is not persistent. It is only valid for the current login session. Default value is false.
	// When set, in addition to the groups the user is already associated with, he will also be associated with the groups returned in the SAML login response. Note that the user's association with the returned groups is not persistent. It is only valid for the current login session. Default value is `false`.
	SyncGroups *bool `json:"syncGroups,omitempty" tf:"sync_groups,omitempty"`

	// (Boolean) When set, an X.509 public certificate will be created by Artifactory. Download this certificate and upload it to your IDP and choose your own encryption algorithm. This process will let you encrypt the assertion section in your SAML response. Default value is false.
	// When set, an X.509 public certificate will be created by Artifactory. Download this certificate and upload it to your IDP and choose your own encryption algorithm. This process will let you encrypt the assertion section in your SAML response. Default value is `false`.
	UseEncryptedAssertion *bool `json:"useEncryptedAssertion,omitempty" tf:"use_encrypted_assertion,omitempty"`

	// (Boolean) Set this flag to specify who the assertion is intended for. The "audience" will be the service provider and is typically a URL but can technically be formatted as any string of data. Default value is true.
	// Set this flag to specify who the assertion is intended for. The "audience" will be the service provider and is typically a URL but can technically be formatted as any string of data. Default value is `true`.
	VerifyAudienceRestriction *bool `json:"verifyAudienceRestriction,omitempty" tf:"verify_audience_restriction,omitempty"`
}

type SAMLSettingsObservation struct {

	// (Boolean) When set, auto created users will have access to their profile page and will be able to perform actions such as generating an API key. Default value is false.
	// When set, auto created users will have access to their profile page and will be able to perform actions such as generating an API key. Default value is `false`.
	AllowUserToAccessProfile *bool `json:"allowUserToAccessProfile,omitempty" tf:"allow_user_to_access_profile,omitempty"`

	// (Boolean) When set, clicking on the login link will direct users to the configured SAML login URL. Default value is false.
	// When set, clicking on the login link will direct users to the configured SAML login URL. Default value is `false`.
	AutoRedirect *bool `json:"autoRedirect,omitempty" tf:"auto_redirect,omitempty"`

	// (Boolean) When set, authenticated users are automatically created in Artifactory. When not set, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined), and the permissions for these groups apply. Without automatic user creation, you must manually create the user inside Artifactory to manage user permissions not attached to their default groups. Default value is true.
	// When set, authenticated users are automatically created in Artifactory. When not set, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined), and the permissions for these groups apply. Without automatic user creation, you must manually create the user inside Artifactory to manage user permissions not attached to their default groups. Default value is `true`.
	AutoUserCreation *bool `json:"autoUserCreation,omitempty" tf:"auto_user_creation,omitempty"`

	// (String) If auto_user_creation is enabled or an internal user exists, the system will set the user's email to the value in this attribute that is returned by the SAML login XML response.
	// If `auto_user_creation` is enabled or an internal user exists, the system will set the user's email to the value in this attribute that is returned by the SAML login XML response.
	EmailAttribute *string `json:"emailAttribute,omitempty" tf:"email_attribute,omitempty"`

	// (Boolean) When set, SAML integration is enabled and users may be authenticated via a SAML server. Default value is true.
	// When set, SAML integration is enabled and users may be authenticated via a SAML server. Default value is `true`.
	Enable *bool `json:"enable,omitempty" tf:"enable,omitempty"`

	// sensitive match to an existing group..
	// The group attribute in the SAML login XML response. Note that the system will search for a case-sensitive match to an existing group..
	GroupAttribute *string `json:"groupAttribute,omitempty" tf:"group_attribute,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Set of String) List of LDAP group setting names. Only support in Artifactory 7.98 or later. See Enabling Synchronization of LDAP Groups for SAML SSO for more details.
	// List of LDAP group setting names. Only support in Artifactory 7.98 or later. See [Enabling Synchronization of LDAP Groups for SAML SSO](https://jfrog.com/help/r/jfrog-platform-administration-documentation/enabling-synchronization-of-ldap-groups-for-saml-sso) for more details.
	// +listType=set
	LdapGroupSettings []*string `json:"ldapGroupSettings,omitempty" tf:"ldap_group_settings,omitempty"`

	// (String) The identity provider login URL (when you try to login, the service provider redirects to this URL).
	// The identity provider login URL (when you try to login, the service provider redirects to this URL).
	LoginURL *string `json:"loginUrl,omitempty" tf:"login_url,omitempty"`

	// (String) The identity provider logout URL (when you try to logout, the service provider redirects to this URL).
	// The identity provider logout URL (when you try to logout, the service provider redirects to this URL).
	LogoutURL *string `json:"logoutUrl,omitempty" tf:"logout_url,omitempty"`

	// (String) SAML Settings name.
	// SAML Settings name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The username attribute used to configure the SSO URL for the identity provider.
	// The username attribute used to configure the SSO URL for the identity provider.
	NameIDAttribute *string `json:"nameIdAttribute,omitempty" tf:"name_id_attribute,omitempty"`

	// (String) The SAML service provider name. This should be a URI that is also known as the entityID, providerID, or entity identity.
	// The SAML service provider name. This should be a URI that is also known as the entityID, providerID, or entity identity.
	ServiceProviderName *string `json:"serviceProviderName,omitempty" tf:"service_provider_name,omitempty"`

	// (Boolean) When set, in addition to the groups the user is already associated with, he will also be associated with the groups returned in the SAML login response. Note that the user's association with the returned groups is not persistent. It is only valid for the current login session. Default value is false.
	// When set, in addition to the groups the user is already associated with, he will also be associated with the groups returned in the SAML login response. Note that the user's association with the returned groups is not persistent. It is only valid for the current login session. Default value is `false`.
	SyncGroups *bool `json:"syncGroups,omitempty" tf:"sync_groups,omitempty"`

	// (Boolean) When set, an X.509 public certificate will be created by Artifactory. Download this certificate and upload it to your IDP and choose your own encryption algorithm. This process will let you encrypt the assertion section in your SAML response. Default value is false.
	// When set, an X.509 public certificate will be created by Artifactory. Download this certificate and upload it to your IDP and choose your own encryption algorithm. This process will let you encrypt the assertion section in your SAML response. Default value is `false`.
	UseEncryptedAssertion *bool `json:"useEncryptedAssertion,omitempty" tf:"use_encrypted_assertion,omitempty"`

	// (Boolean) Set this flag to specify who the assertion is intended for. The "audience" will be the service provider and is typically a URL but can technically be formatted as any string of data. Default value is true.
	// Set this flag to specify who the assertion is intended for. The "audience" will be the service provider and is typically a URL but can technically be formatted as any string of data. Default value is `true`.
	VerifyAudienceRestriction *bool `json:"verifyAudienceRestriction,omitempty" tf:"verify_audience_restriction,omitempty"`
}

type SAMLSettingsParameters struct {

	// (Boolean) When set, auto created users will have access to their profile page and will be able to perform actions such as generating an API key. Default value is false.
	// When set, auto created users will have access to their profile page and will be able to perform actions such as generating an API key. Default value is `false`.
	// +kubebuilder:validation:Optional
	AllowUserToAccessProfile *bool `json:"allowUserToAccessProfile,omitempty" tf:"allow_user_to_access_profile,omitempty"`

	// (Boolean) When set, clicking on the login link will direct users to the configured SAML login URL. Default value is false.
	// When set, clicking on the login link will direct users to the configured SAML login URL. Default value is `false`.
	// +kubebuilder:validation:Optional
	AutoRedirect *bool `json:"autoRedirect,omitempty" tf:"auto_redirect,omitempty"`

	// (Boolean) When set, authenticated users are automatically created in Artifactory. When not set, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined), and the permissions for these groups apply. Without automatic user creation, you must manually create the user inside Artifactory to manage user permissions not attached to their default groups. Default value is true.
	// When set, authenticated users are automatically created in Artifactory. When not set, for every request from an SSO user, the user is temporarily associated with default groups (if such groups are defined), and the permissions for these groups apply. Without automatic user creation, you must manually create the user inside Artifactory to manage user permissions not attached to their default groups. Default value is `true`.
	// +kubebuilder:validation:Optional
	AutoUserCreation *bool `json:"autoUserCreation,omitempty" tf:"auto_user_creation,omitempty"`

	// in requests.
	// The certificate for SAML Authentication in Base64 format. NOTE! The certificate must contain the public key to allow Artifactory to verify sign-in requests.
	// +kubebuilder:validation:Optional
	CertificateSecretRef v1.SecretKeySelector `json:"certificateSecretRef" tf:"-"`

	// (String) If auto_user_creation is enabled or an internal user exists, the system will set the user's email to the value in this attribute that is returned by the SAML login XML response.
	// If `auto_user_creation` is enabled or an internal user exists, the system will set the user's email to the value in this attribute that is returned by the SAML login XML response.
	// +kubebuilder:validation:Optional
	EmailAttribute *string `json:"emailAttribute,omitempty" tf:"email_attribute,omitempty"`

	// (Boolean) When set, SAML integration is enabled and users may be authenticated via a SAML server. Default value is true.
	// When set, SAML integration is enabled and users may be authenticated via a SAML server. Default value is `true`.
	// +kubebuilder:validation:Optional
	Enable *bool `json:"enable,omitempty" tf:"enable,omitempty"`

	// sensitive match to an existing group..
	// The group attribute in the SAML login XML response. Note that the system will search for a case-sensitive match to an existing group..
	// +kubebuilder:validation:Optional
	GroupAttribute *string `json:"groupAttribute,omitempty" tf:"group_attribute,omitempty"`

	// (Set of String) List of LDAP group setting names. Only support in Artifactory 7.98 or later. See Enabling Synchronization of LDAP Groups for SAML SSO for more details.
	// List of LDAP group setting names. Only support in Artifactory 7.98 or later. See [Enabling Synchronization of LDAP Groups for SAML SSO](https://jfrog.com/help/r/jfrog-platform-administration-documentation/enabling-synchronization-of-ldap-groups-for-saml-sso) for more details.
	// +kubebuilder:validation:Optional
	// +listType=set
	LdapGroupSettings []*string `json:"ldapGroupSettings,omitempty" tf:"ldap_group_settings,omitempty"`

	// (String) The identity provider login URL (when you try to login, the service provider redirects to this URL).
	// The identity provider login URL (when you try to login, the service provider redirects to this URL).
	// +kubebuilder:validation:Optional
	LoginURL *string `json:"loginUrl,omitempty" tf:"login_url,omitempty"`

	// (String) The identity provider logout URL (when you try to logout, the service provider redirects to this URL).
	// The identity provider logout URL (when you try to logout, the service provider redirects to this URL).
	// +kubebuilder:validation:Optional
	LogoutURL *string `json:"logoutUrl,omitempty" tf:"logout_url,omitempty"`

	// (String) SAML Settings name.
	// SAML Settings name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The username attribute used to configure the SSO URL for the identity provider.
	// The username attribute used to configure the SSO URL for the identity provider.
	// +kubebuilder:validation:Optional
	NameIDAttribute *string `json:"nameIdAttribute,omitempty" tf:"name_id_attribute,omitempty"`

	// (String) The SAML service provider name. This should be a URI that is also known as the entityID, providerID, or entity identity.
	// The SAML service provider name. This should be a URI that is also known as the entityID, providerID, or entity identity.
	// +kubebuilder:validation:Optional
	ServiceProviderName *string `json:"serviceProviderName,omitempty" tf:"service_provider_name,omitempty"`

	// (Boolean) When set, in addition to the groups the user is already associated with, he will also be associated with the groups returned in the SAML login response. Note that the user's association with the returned groups is not persistent. It is only valid for the current login session. Default value is false.
	// When set, in addition to the groups the user is already associated with, he will also be associated with the groups returned in the SAML login response. Note that the user's association with the returned groups is not persistent. It is only valid for the current login session. Default value is `false`.
	// +kubebuilder:validation:Optional
	SyncGroups *bool `json:"syncGroups,omitempty" tf:"sync_groups,omitempty"`

	// (Boolean) When set, an X.509 public certificate will be created by Artifactory. Download this certificate and upload it to your IDP and choose your own encryption algorithm. This process will let you encrypt the assertion section in your SAML response. Default value is false.
	// When set, an X.509 public certificate will be created by Artifactory. Download this certificate and upload it to your IDP and choose your own encryption algorithm. This process will let you encrypt the assertion section in your SAML response. Default value is `false`.
	// +kubebuilder:validation:Optional
	UseEncryptedAssertion *bool `json:"useEncryptedAssertion,omitempty" tf:"use_encrypted_assertion,omitempty"`

	// (Boolean) Set this flag to specify who the assertion is intended for. The "audience" will be the service provider and is typically a URL but can technically be formatted as any string of data. Default value is true.
	// Set this flag to specify who the assertion is intended for. The "audience" will be the service provider and is typically a URL but can technically be formatted as any string of data. Default value is `true`.
	// +kubebuilder:validation:Optional
	VerifyAudienceRestriction *bool `json:"verifyAudienceRestriction,omitempty" tf:"verify_audience_restriction,omitempty"`
}

// SAMLSettingsSpec defines the desired state of SAMLSettings
type SAMLSettingsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SAMLSettingsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SAMLSettingsInitParameters `json:"initProvider,omitempty"`
}

// SAMLSettingsStatus defines the observed state of SAMLSettings.
type SAMLSettingsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SAMLSettingsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SAMLSettings is the Schema for the SAMLSettingss API. Provides a JFrog SAML SSO Settings https://jfrog.com/help/r/jfrog-platform-administration-documentation/saml-sso resource. ~>Only available for self-hosted instances.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,jfrog-platform}
type SAMLSettings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.certificateSecretRef)",message="spec.forProvider.certificateSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.loginUrl) || (has(self.initProvider) && has(self.initProvider.loginUrl))",message="spec.forProvider.loginUrl is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.logoutUrl) || (has(self.initProvider) && has(self.initProvider.logoutUrl))",message="spec.forProvider.logoutUrl is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceProviderName) || (has(self.initProvider) && has(self.initProvider.serviceProviderName))",message="spec.forProvider.serviceProviderName is a required parameter"
	Spec   SAMLSettingsSpec   `json:"spec"`
	Status SAMLSettingsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SAMLSettingsList contains a list of SAMLSettingss
type SAMLSettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SAMLSettings `json:"items"`
}

// Repository type metadata.
var (
	SAMLSettings_Kind             = "SAMLSettings"
	SAMLSettings_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SAMLSettings_Kind}.String()
	SAMLSettings_KindAPIVersion   = SAMLSettings_Kind + "." + CRDGroupVersion.String()
	SAMLSettings_GroupVersionKind = CRDGroupVersion.WithKind(SAMLSettings_Kind)
)

func init() {
	SchemeBuilder.Register(&SAMLSettings{}, &SAMLSettingsList{})
}

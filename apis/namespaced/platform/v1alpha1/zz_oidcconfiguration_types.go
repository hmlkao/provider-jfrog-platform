// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type OIDCConfigurationInitParameters struct {

	// (String) Informational field that you can use to include details of the audience that uses the OIDC configuration.
	// Informational field that you can use to include details of the audience that uses the OIDC configuration.
	Audience *string `json:"audience,omitempty" tf:"audience,omitempty"`

	// (String) Description of the OIDC provider
	// Description of the OIDC provider
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Only settable when provider_type is GitHub. When set, Allows authentication without any restrictions. For security best practices, it is recommended to add restrictions to limit access and enforce stricter controls. Use with caution, as this may grant broader access.
	// Only settable when `provider_type` is GitHub. When set, Allows authentication without any restrictions. For security best practices, it is recommended to add restrictions to limit access and enforce stricter controls. Use with caution, as this may grant broader access.
	EnablePermissiveConfiguration *bool `json:"enablePermissiveConfiguration,omitempty" tf:"enable_permissive_configuration,omitempty"`

	// (String) OIDC issuer URL. For GitHub actions, the URL must start with https://token.actions.githubusercontent.com.
	// OIDC issuer URL. For GitHub actions, the URL must start with https://token.actions.githubusercontent.com.
	IssuerURL *string `json:"issuerUrl,omitempty" tf:"issuer_url,omitempty"`

	// (String) Name of the OIDC provider
	// Name of the OIDC provider
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) This field is mandatory, when provider_type is GitHub. Informational field that you can use to include details of the organization that uses the OIDC configuration.
	// This field is mandatory, when `provider_type` is GitHub. Informational field that you can use to include details of the organization that uses the OIDC configuration.
	Organization *string `json:"organization,omitempty" tf:"organization,omitempty"`

	// (String) If set, this Identity Configuration will be available in the scope of the given project (editable by platform admin and project admin). If not set, this Identity Configuration will be global and only editable by platform admin. Once set, the projectKey cannot be changed.
	// If set, this Identity Configuration will be available in the scope of the given project (editable by platform admin and project admin). If not set, this Identity Configuration will be global and only editable by platform admin. Once set, the projectKey cannot be changed.
	ProjectKey *string `json:"projectKey,omitempty" tf:"project_key,omitempty"`

	// (String) Type of OIDC provider. Can be generic, GitHub, or Azure.
	// Type of OIDC provider. Can be `generic`, `GitHub`, or `Azure`.
	ProviderType *string `json:"providerType,omitempty" tf:"provider_type,omitempty"`

	// (Boolean) This enables and disables the default proxy for OIDC integration. If enabled, the OIDC mechanism will utilize the default proxy for all OIDC requests. If disabled, the OIDC mechanism does not use any proxy for all OIDC requests. Before enabling this functionality you must configure the default proxy.
	// This enables and disables the default proxy for OIDC integration. If enabled, the OIDC mechanism will utilize the default proxy for all OIDC requests. If disabled, the OIDC mechanism does not use any proxy for all OIDC requests. Before enabling this functionality you must configure the default proxy.
	UseDefaultProxy *bool `json:"useDefaultProxy,omitempty" tf:"use_default_proxy,omitempty"`
}

type OIDCConfigurationObservation struct {

	// (String) Informational field that you can use to include details of the audience that uses the OIDC configuration.
	// Informational field that you can use to include details of the audience that uses the OIDC configuration.
	Audience *string `json:"audience,omitempty" tf:"audience,omitempty"`

	// (String) Description of the OIDC provider
	// Description of the OIDC provider
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Only settable when provider_type is GitHub. When set, Allows authentication without any restrictions. For security best practices, it is recommended to add restrictions to limit access and enforce stricter controls. Use with caution, as this may grant broader access.
	// Only settable when `provider_type` is GitHub. When set, Allows authentication without any restrictions. For security best practices, it is recommended to add restrictions to limit access and enforce stricter controls. Use with caution, as this may grant broader access.
	EnablePermissiveConfiguration *bool `json:"enablePermissiveConfiguration,omitempty" tf:"enable_permissive_configuration,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) OIDC issuer URL. For GitHub actions, the URL must start with https://token.actions.githubusercontent.com.
	// OIDC issuer URL. For GitHub actions, the URL must start with https://token.actions.githubusercontent.com.
	IssuerURL *string `json:"issuerUrl,omitempty" tf:"issuer_url,omitempty"`

	// (String) Name of the OIDC provider
	// Name of the OIDC provider
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) This field is mandatory, when provider_type is GitHub. Informational field that you can use to include details of the organization that uses the OIDC configuration.
	// This field is mandatory, when `provider_type` is GitHub. Informational field that you can use to include details of the organization that uses the OIDC configuration.
	Organization *string `json:"organization,omitempty" tf:"organization,omitempty"`

	// (String) If set, this Identity Configuration will be available in the scope of the given project (editable by platform admin and project admin). If not set, this Identity Configuration will be global and only editable by platform admin. Once set, the projectKey cannot be changed.
	// If set, this Identity Configuration will be available in the scope of the given project (editable by platform admin and project admin). If not set, this Identity Configuration will be global and only editable by platform admin. Once set, the projectKey cannot be changed.
	ProjectKey *string `json:"projectKey,omitempty" tf:"project_key,omitempty"`

	// (String) Type of OIDC provider. Can be generic, GitHub, or Azure.
	// Type of OIDC provider. Can be `generic`, `GitHub`, or `Azure`.
	ProviderType *string `json:"providerType,omitempty" tf:"provider_type,omitempty"`

	// (Boolean) This enables and disables the default proxy for OIDC integration. If enabled, the OIDC mechanism will utilize the default proxy for all OIDC requests. If disabled, the OIDC mechanism does not use any proxy for all OIDC requests. Before enabling this functionality you must configure the default proxy.
	// This enables and disables the default proxy for OIDC integration. If enabled, the OIDC mechanism will utilize the default proxy for all OIDC requests. If disabled, the OIDC mechanism does not use any proxy for all OIDC requests. Before enabling this functionality you must configure the default proxy.
	UseDefaultProxy *bool `json:"useDefaultProxy,omitempty" tf:"use_default_proxy,omitempty"`
}

type OIDCConfigurationParameters struct {

	// (String) Informational field that you can use to include details of the audience that uses the OIDC configuration.
	// Informational field that you can use to include details of the audience that uses the OIDC configuration.
	// +kubebuilder:validation:Optional
	Audience *string `json:"audience,omitempty" tf:"audience,omitempty"`

	// (String) Description of the OIDC provider
	// Description of the OIDC provider
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Only settable when provider_type is GitHub. When set, Allows authentication without any restrictions. For security best practices, it is recommended to add restrictions to limit access and enforce stricter controls. Use with caution, as this may grant broader access.
	// Only settable when `provider_type` is GitHub. When set, Allows authentication without any restrictions. For security best practices, it is recommended to add restrictions to limit access and enforce stricter controls. Use with caution, as this may grant broader access.
	// +kubebuilder:validation:Optional
	EnablePermissiveConfiguration *bool `json:"enablePermissiveConfiguration,omitempty" tf:"enable_permissive_configuration,omitempty"`

	// (String) OIDC issuer URL. For GitHub actions, the URL must start with https://token.actions.githubusercontent.com.
	// OIDC issuer URL. For GitHub actions, the URL must start with https://token.actions.githubusercontent.com.
	// +kubebuilder:validation:Optional
	IssuerURL *string `json:"issuerUrl,omitempty" tf:"issuer_url,omitempty"`

	// (String) Name of the OIDC provider
	// Name of the OIDC provider
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) This field is mandatory, when provider_type is GitHub. Informational field that you can use to include details of the organization that uses the OIDC configuration.
	// This field is mandatory, when `provider_type` is GitHub. Informational field that you can use to include details of the organization that uses the OIDC configuration.
	// +kubebuilder:validation:Optional
	Organization *string `json:"organization,omitempty" tf:"organization,omitempty"`

	// (String) If set, this Identity Configuration will be available in the scope of the given project (editable by platform admin and project admin). If not set, this Identity Configuration will be global and only editable by platform admin. Once set, the projectKey cannot be changed.
	// If set, this Identity Configuration will be available in the scope of the given project (editable by platform admin and project admin). If not set, this Identity Configuration will be global and only editable by platform admin. Once set, the projectKey cannot be changed.
	// +kubebuilder:validation:Optional
	ProjectKey *string `json:"projectKey,omitempty" tf:"project_key,omitempty"`

	// (String) Type of OIDC provider. Can be generic, GitHub, or Azure.
	// Type of OIDC provider. Can be `generic`, `GitHub`, or `Azure`.
	// +kubebuilder:validation:Optional
	ProviderType *string `json:"providerType,omitempty" tf:"provider_type,omitempty"`

	// (Boolean) This enables and disables the default proxy for OIDC integration. If enabled, the OIDC mechanism will utilize the default proxy for all OIDC requests. If disabled, the OIDC mechanism does not use any proxy for all OIDC requests. Before enabling this functionality you must configure the default proxy.
	// This enables and disables the default proxy for OIDC integration. If enabled, the OIDC mechanism will utilize the default proxy for all OIDC requests. If disabled, the OIDC mechanism does not use any proxy for all OIDC requests. Before enabling this functionality you must configure the default proxy.
	// +kubebuilder:validation:Optional
	UseDefaultProxy *bool `json:"useDefaultProxy,omitempty" tf:"use_default_proxy,omitempty"`
}

// OIDCConfigurationSpec defines the desired state of OIDCConfiguration
type OIDCConfigurationSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            OIDCConfigurationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OIDCConfigurationInitParameters `json:"initProvider,omitempty"`
}

// OIDCConfigurationStatus defines the observed state of OIDCConfiguration.
type OIDCConfigurationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OIDCConfigurationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// OIDCConfiguration is the Schema for the OIDCConfigurations API. Manage OIDC configuration in JFrog platform. See the JFrog OIDC configuration documentation https://jfrog.com/help/r/jfrog-platform-administration-documentation/configure-an-oidc-integration for more information.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,jfrog-platform}
type OIDCConfiguration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.issuerUrl) || (has(self.initProvider) && has(self.initProvider.issuerUrl))",message="spec.forProvider.issuerUrl is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.providerType) || (has(self.initProvider) && has(self.initProvider.providerType))",message="spec.forProvider.providerType is a required parameter"
	Spec   OIDCConfigurationSpec   `json:"spec"`
	Status OIDCConfigurationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OIDCConfigurationList contains a list of OIDCConfigurations
type OIDCConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OIDCConfiguration `json:"items"`
}

// Repository type metadata.
var (
	OIDCConfiguration_Kind             = "OIDCConfiguration"
	OIDCConfiguration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OIDCConfiguration_Kind}.String()
	OIDCConfiguration_KindAPIVersion   = OIDCConfiguration_Kind + "." + CRDGroupVersion.String()
	OIDCConfiguration_GroupVersionKind = CRDGroupVersion.WithKind(OIDCConfiguration_Kind)
)

func init() {
	SchemeBuilder.Register(&OIDCConfiguration{}, &OIDCConfigurationList{})
}
